name: Build wheels and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  setup_build_targets:
    name: Setup build targets
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.0.1

      - name: Generate strategy matrix
        id: set-matrix
        run: python3 ci/cibuildwheel_matrix.py

  build_wheels:
    name: Build wheels for ${{ matrix.target.arch }} on ${{ matrix.target.os }}
    needs: setup_build_targets
    runs-on: ${{ matrix.target.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup_build_targets.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setup Ninja
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_ENVIRONMENT_LINUX: ${{ matrix.target.arch == 'x86_64' && 'CMAKE_ARGS="-DBUILD_WITH_BLASFEO=ON -DBLASFEO_X64_DIR=/opt/blasfeo_x64 -DBLASFEO_X64_AVX2_DIR=/opt/blasfeo_x64_avx2 -DBLASFEO_X64_AVX512_DIR=/opt/blasfeo_x64_avx512"' || (matrix.target.arch == 'aarch64' && 'CMAKE_ARGS="-DBUILD_WITH_BLASFEO=ON -DBLASFEO_ARM64_DIR=/opt/blasfeo_arm64"' || '') }}
          CIBW_ENVIRONMENT_MACOS: ${{ matrix.target.arch == 'x86_64' && 'CMAKE_ARGS="-DBUILD_WITH_BLASFEO=ON -DBLASFEO_X64_DIR=/opt/blasfeo_x64 -DBLASFEO_X64_AVX2_DIR=/opt/blasfeo_x64_avx2 -DBLASFEO_X64_AVX512_DIR=/opt/blasfeo_x64_avx512"' || (matrix.target.arch == 'arm64' && 'CMAKE_ARGS="-DBUILD_WITH_BLASFEO=ON -DBLASFEO_ARM64_DIR=/opt/blasfeo_arm64"' || '') }}
          CIBW_ENVIRONMENT_WINDOWS: ${{ matrix.target.arch == 'AMD64' && 'CMAKE_ARGS="-DBUILD_WITH_BLASFEO=ON -DBLASFEO_X64_DIR=c:/opt/blasfeo_x64 -DBLASFEO_X64_AVX2_DIR=c:/opt/blasfeo_x64_avx2 -DBLASFEO_X64_AVX512_DIR=c:/opt/blasfeo_x64_avx512"' || (matrix.target.arch == 'ARM64' && 'CMAKE_ARGS="-DBUILD_WITH_BLASFEO=ON -DBLASFEO_ARM64_DIR=c:/opt/blasfeo_arm64"' || '') }}
          CIBW_ARCHS_LINUX: ${{ matrix.target.arch }}
          CIBW_BEFORE_ALL_LINUX: bash ci/install_all_deps_linux.sh
          CIBW_BEFORE_ALL_WINDOWS: bash ci/install_all_deps_windows.sh
          CIBW_BEFORE_ALL_MACOS: bash ci/install_all_deps_macos.sh
          CIBW_BUILD: ${{ matrix.target.build }}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target.arch }}-${{ matrix.target.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Build sdist
        run: pipx run build --sdist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-source
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/piqp
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          # unpacks artifacts into dist/
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
#          repository-url: https://test.pypi.org/legacy/
